
pipeline {
    agent any
    tools {
        jdk 'JAVA_HOME'         // Set in Jenkins -> Global Tool Configuration
        maven 'MAVEN_HOME'      // Same as above
    }
    environment {
        // SONARQUBE_ENV must match the name set in Manage Jenkins > Configure System > SonarQube servers
        SONARQUBE_ENV = 'SONAR-SERVER'   // Must be Jenkins credentials ID (Username + Token or just Token)
        DOCKER_IMAGE = 'devika12345/mysanta-gift-generator-app:latest'
    }
    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/devika-goes-cloud/secretsanta-gifts-generator.git'
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean install -DskipTests'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv("${SONARQUBE_ENV}") {
                    sh 'mvn sonar:sonar'
                }
            }
        }
        stage('Docker Login') {
            steps {
                // 'dockerhub-creds' should be a Username with Password credential in Jenkins Credentials.
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin'
                }
            }
        }
        stage('Docker Build & Run') {
            steps {
                sh "docker build -t $DOCKER_IMAGE ."
                sh "docker push $DOCKER_IMAGE"
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Stop any running container with same name
                    sh 'docker rm -f mysanta-app || true'
                    // Run the container (map port 8080 or update as needed)

                    sh '''
                        docker run -d --name mysanta-app -p 8080:8080 $DOCKER_IMAGE
                    '''
                }
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline executed successfully!'
        }
        failure {
            echo '❌ Pipeline failed!'
        }
    }
}
